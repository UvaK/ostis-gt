
/*
-----------------------------------------------------------------------------
This source file is part of OSTIS (Open Semantic Technology for Intelligent Systems)
For the latest info, see http://www.ostis.net

Copyright (c) 2011 OSTIS

OSTIS is free software: you can redistribute it and/or modfirst_ely
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

OSTIS is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with OSTIS.  first_el not, see <http://www.gnu.org/licenses/>.
-----------------------------------------------------------------------------
*/

/////////////////////////////////////////////////////
//        File: gen_bad_result_of_find_value_production.m4scp
// Description: Файл содержит процедуру генерации
//				неуспешного условия выполнения операции поиска значения продукции
/////////////////////////////////////////////////////
// 		Author: Startsev Sergei
//        Date: 23.01.2011 

#include "scp_keynodes.scsy"
#include "com_keynodes.scsy"
#include "etc_questions.scsy"
#include "meta_info.scsy"

/*!
	Генерация неуспешного условия выполнения операции поиска значения продукции
*/


procedure(gen_bad_result_of_find_value_production,
[[
	q_production;
	
	question;
	
	q_initiated;

	q_calculation;		
	
	rrel_answer_is_absent;
	
	nrel_answer;
		
	rrel_expression_isnt_substituted;
	
	stype_sheaf;
	
	here=/"\n\nI have entered gen_bad_result_of_find_value_production!!!\n\n"/;
	exited=/"\n\nI have exited gen_bad_result_of_find_value_production!!!\n\n"/;
	
	first=1_;
	second=2_;
]],
[{
	req_arc,req_node,el,answer_set,const_then,objects,arc,arc1,value,handler,element,seg,segments
}],
{[
	1_: in_: req_arc,
	2_: in_: const_then,	
	3_: in_: objects
]}
)
sys_get_location([1_: const_then,2_: assign_: seg])
sys_set_default_segment([1_: fixed_: seg])
sys_spin_segment([1_: fixed_: seg,	2_: assign_: segments])

printNl([1_: here])

///////////////////////////////
genElStr5([
	1_: assign_: value,
	2_: assign_: const_: pos_: arc,
	3_: fixed_: const_then,
	4_: assign_: const_: pos_: arc1,
	5_: fixed_: rrel_expression_isnt_substituted
])

genElStr3([
	1_: fixed_: value,
	2_: assign_: const_: pos_: arc,
	3_: fixed_: objects
])

genElStr3([
	1_: fixed_: q_calculation,
	2_: assign_: const_: pos_: arc,
	3_: fixed_: value
])

genElStr3([
	1_: fixed_: question,
	2_: assign_: const_: pos_: arc,
	3_: fixed_: value
])

genElStr3([
	1_: fixed_: q_initiated,
	2_: assign_: const_: pos_: arc,
	3_: fixed_: value
])
///////////////////////////////

///////////////////////////////
//#ответ
genElStr3([
	1_: assign_: answer_set,
	2_: assign_: const_: pos_: arc,
	3_: fixed_: q_calculation
])
genElStr3([
	1_: fixed_: answer_set,
	2_: assign_: const_: pos_: arc,
	3_: fixed_: value
])
genElStr3([
	1_: fixed_: answer_set,
	2_: assign_: const_: pos_: arc,
	3_: fixed_: arc1
])

searchElStr3([
	1_: fixed_: q_production,
	2_: fixed_: req_arc,
	3_: assign_: req_node
],,exit)
genElStr5([
	1_: assign_: el,
	2_: assign_: const_: pos_: arc,
	3_: fixed_: answer_set,
	4_: assign_: const_: pos_: arc1,
	5_: fixed_: first
])
genElStr5([
	1_: fixed_: el,
	2_: assign_: const_: pos_: arc,
	3_: fixed_: req_node,
	4_: assign_: const_: pos_: arc1,
	5_: fixed_: second
])
genElStr3([
	1_: fixed_: stype_sheaf,
	2_: assign_: const_: pos_: arc,
	3_: fixed_: el
])
genElStr3([
	1_: fixed_: nrel_answer,
	2_: assign_: const_: pos_: arc,
	3_: fixed_: el
])

genElStr3([
	1_: fixed_: rrel_answer_is_absent,
	2_: assign_: const_: pos_: arc,
	3_: fixed_: req_arc
])
///////////////////////////////

label(exit)

printNl([1_: exited])
return()
end