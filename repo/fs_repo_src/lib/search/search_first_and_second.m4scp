
/*
-----------------------------------------------------------------------------
This source file is part of OSTIS (Open Semantic Technology for Intelligent Systems)
For the latest info, see http://www.ostis.net

Copyright (c) 2011 OSTIS

OSTIS is free software: you can redistribute it and/or modfirst_ely
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

OSTIS is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with OSTIS.  first_el not, see <http://www.gnu.org/licenses/>.
-----------------------------------------------------------------------------
*/

/////////////////////////////////////////////////////
//        File: search_first_and_second.m4scp
// Description: Файл содержит процедуру поиска
//				элемента в связке под атрибутом 1_ и элемента под атрибутом 2_
/////////////////////////////////////////////////////
// 		Author: Startsev Sergei
//        Date: 22.01.2011 

#include "scp_keynodes.scsy"
#include "com_keynodes.scsy"
#include "etc_questions.scsy"
#include "meta_info.scsy"

/*!
	Поиск элемента в связке под атрибутом 1_ и элемента под атрибутом 2_
	
	@result	элемент в связке под атрибутом 1_ и элемент под атрибутом 2_
*/

procedure(search_first_and_second,
[[		
	first=1_;
	second=2_;
	
	//#отладочная информация, закомментировать или убрать
	find_first=/"\n\nI find first!\n\n"/;
	not_find_first=/"\n\nI don't find first!\n\n"/;
	find_second=/"\n\nI find second!\n\n"/;
	not_find_second=/"\n\nI don't find second!\n\n"/;
	here=/"\n\nI have entered search_first_and_second!!!\n\n"/;
	exited=/"\n\nI have exited search_first_and_second!!!\n\n"/;
	
]],
[{	
	first_el,second_el,arc,arc1,handler,element,seg,segments,temp,set,set2,rel,section,attr
}],
{[	
	//связка
	1_: in_: rel,	
	//элемент в связке под атрибутом 1_
	2_: out_: first_el,
	//элемент в связке под атрибутом 2_
	3_: out_: second_el
]}
)
sys_get_location([1_: rel,2_: assign_: seg])
sys_set_default_segment([1_: fixed_: seg])
sys_spin_segment([1_: fixed_: seg,	2_: assign_: segments])

printNl([1_: here])

///////////////////////////////
//определяем посылку

searchElStr5([
	1_: fixed_: rel,
	2_: assign_: const_: pos_: arc,
	3_: assign_: first_el,
	4_: assign_: const_: pos_: arc1,
	5_: fixed_: first
],,l_not_find_first_el)

printNl([1_: find_first_el])

//определяем следствие

searchElStr5([
	1_: fixed_: rel,
	2_: assign_: const_: pos_: arc,
	3_: assign_: second_el,
	4_: assign_: const_: pos_: arc1,
	5_: fixed_: second
],,l_not_find_second_el)

printNl([1_: find_second_el],exit,exit)
///////////////////////////////

label(l_not_find_first_el)
///////////////////////////////
printNl([1_: not_find_first_el],exit,exit)
///////////////////////////////

label(l_not_find_second_el)
///////////////////////////////
printNl([1_: not_find_second_el],exit,exit)
///////////////////////////////

label(exit)

printNl([1_: exited])
return()
end