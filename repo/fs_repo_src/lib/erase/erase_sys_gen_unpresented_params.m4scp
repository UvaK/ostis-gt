
/*
-----------------------------------------------------------------------------
This source file is part of OSTIS (Open Semantic Technology for Intelligent Systems)
For the latest info, see http://www.ostis.net

Copyright (c) 2010 OSTIS

OSTIS is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

OSTIS is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with OSTIS.  If not, see <http://www.gnu.org/licenses/>.
-----------------------------------------------------------------------------
*/

/////////////////////////////////////////////////////
//        File: erase_sys_gen_unpresented_params.m4scp
// Description:
// Файл содержит процедуру удаления параметров системнойго оператора sys_search
// 1-й аргумент - исходный параметр
/////////////////////////////////////////////////////
// 		Author: Daniil Shunkevich
//        Date: 11.01.11

#include "scp_keynodes.scsy"

procedure(erase_sys_gen_unpresented_params,
[[	
]],
[{	
	a,arc,seg,segments,temp,arc1,node,template,params,elem,set
}],
{[
	1_: in_: template,
	2_: in_: params
]}
)
sys_get_location([1_: template,2_: assign_: seg])
sys_set_default_segment([1_: fixed_: seg])
sys_spin_segment([1_: fixed_: seg,	2_: assign_: segments])

searchSetStr3([
	1_: fixed_: params,
	2_: assign_: const_: pos_: arc,
	3_: assign_: const_: node_: temp,
	set3_: assign_: set
],,exit)

label(next_node)
ifVarAssign([1_: node],,noerase)
eraseSetStr3([
	1_: fixed_: set,
	2_: assign_: const_: pos_: f_: arc,
	3_: fixed_: node
])
label(noerase)
searchElStr3([
	1_: fixed_: set,
	2_: assign_: const_: pos_: arc,
	3_: assign_: node_: const_: node
],,exit)
searchElStr5([
	1_: fixed_: node,
	2_: assign_: const_: pos_: arc,
	3_: assign_: node_: var_: elem,
	4_: assign_: const_: pos_: arc1,
	5_: fixed_: 1_
],,next_node)
//#printNl([1_: /"ELEM"/])
//#printEl([1_: elem])
searchElStr3([
	1_: fixed_: template,
	2_: assign_: const_: pos_: arc,
	3_: fixed_: elem
],next_node)
eraseEl([1_: fixed_: node],next_node,next_node)

label(exit)
return()
end