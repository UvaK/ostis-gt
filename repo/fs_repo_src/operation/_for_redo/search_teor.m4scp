
/*
-----------------------------------------------------------------------------
This source file is part of OSTIS (Open Semantic Technology for Intelligent Systems)
For the latest info, see http://www.ostis.net

Copyright (c) 2010 OSTIS

OSTIS is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

OSTIS is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with OSTIS.  If not, see <http://www.gnu.org/licenses/>.
-----------------------------------------------------------------------------
*/


#include "scp_keynodes.scsy"
#include "ui_keynodes.scsy"

procedure(search_teor_ui,
[[
	f_search = "/operation/search_teor/search_teor";
	ui_Output;		// процедура вывода конструкций пользователю
]],
[{
	wnd, selected_el, sheet, shift, 
	arc, target, result_set, e, answer_reciever
}],
{[
	1_: in_: selected_el,
	2_: in_: sheet,
	3_: in_: answer_reciever
]}
)
//# Получение целевого объекта
searchElStr3([
	1_: fixed_: selected_el,
	2_: assign_: arc_: pos_: const_: arc,
	3_: assign_: node_: target
	])
	
genEl([
	1_: assign_: node_: const_: result_set
	])

callReturn([
	1_: fixed_: f_search,
	2_: fixed_: {[
		1_: fixed_: target,
		2_: fixed_: result_set
		]}
	], e)

callReturn([ 
	1_: fixed_: ui_Output,
	2_: fixed_: {[
		1_: answer_reciever,
		2_: result_set
	]}
	])

return()
end


procedure(search_teor,
[[	
	relation = "/seb/planimetry/теорема_";
	main_semantic = "/operation/search_semantic/binrel_by_target_rel";
]],
[{
	target, result_set,
	e, 
	node1, node2, 
	arc1, arc2, arc3, 
	set1, set2	
}],
{[
	1_: in_: target,
	2_: in_: out_: result_set
]}
)
	genElStr3([1_: fixed_: result_set, 2_: assign_: arc_: pos_: const_: arc1, 3_: fixed_: target])
	genElStr3([1_: fixed_: result_set, 2_: assign_: arc_: pos_: const_: arc1, 3_: fixed_: relation])
	searchSetStr5([
		1_: fixed_: target,
		2_: assign_: arc_: pos_: const_: arc1,
		3_: assign_: node_: const_: node1,
		4_: assign_: arc_: pos_: const_: arc2,
		5_: fixed_: relation,
		set2_: set3_: set4_: fixed_: result_set
		])
	
return()
end