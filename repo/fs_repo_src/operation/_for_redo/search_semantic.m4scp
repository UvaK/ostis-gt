
/*
-----------------------------------------------------------------------------
This source file is part of OSTIS (Open Semantic Technology for Intelligent Systems)
For the latest info, see http://www.ostis.net

Copyright (c) 2010 OSTIS

OSTIS is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

OSTIS is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with OSTIS.  If not, see <http://www.gnu.org/licenses/>.
-----------------------------------------------------------------------------
*/


#include "scp_keynodes.scsy"
#include "ui_keynodes.scsy"

procedure(search_semantic_ui,
[[
	f_search = "/operation/search_semantic/search_semantic";
	ui_Output;		// процедура вывода конструкций пользователю
]],
[{
	wnd, selected_el, sheet, shift, 
	arc, target, result_set, e, answer_reciever
}],
{[
	1_: in_: selected_el,
	2_: in_: sheet,
	3_: in_: answer_reciever
]}
)
//# Получение целевого объекта
searchElStr3([
	1_: fixed_: selected_el,
	2_: assign_: arc_: pos_: const_: arc,
	3_: assign_: node_: target
	])
	
genEl([
	1_: assign_: node_: const_: result_set
	])

callReturn([
	1_: fixed_: f_search,
	2_: fixed_: {[
		1_: target,
		2_: result_set,
		3_: answer_reciever
		]}
	], e)

return()
end


procedure(search_semantic,
[[	
	main_semantic = "/operation/search_semantic/binrel_by_target_rel";
	main_sem_okr = "/seb/planimetry/основная семантическая окрестность*";
	konst_in_def = "/seb/planimetry/константы, входящие в определение*";
	ui_Output;		// процедура вывода конструкций пользователю
]],
[{
	target, result_set,
	e, answer_reciever,
	node1, node2, 
	arc1, arc2, arc3, 
	set1, set2,
	x1,x2
}],
{[
	1_: in_: target,
	2_: in_: out_: result_set,
	3_: in_: answer_reciever
]}
)

searchSetStr5([
	1_: assign_: node_: const_: node1,
	2_: assign_: arc_: pos_: const_: arc1,
	3_: fixed_: main_sem_okr,
	4_: assign_: arc_: pos_: const_: arc2,
	5_: fixed_: 2_,
	set1_: assign_: set1
	],,end_search_main_sem)
	
label(beg_search)
	
	searchElStr3([
		1_: fixed_: set1,
		2_: assign_: arc_: pos_: const_: arc1,
		3_: assign_: node_: const_: node1
		],,end_search_main_sem)
		
	eraseEl([1_: fixed_: arc1])
	
	searchElStr3([
		1_: fixed_: konst_in_def,
		2_: assign_: arc_: pos_: const_: arc1,
		3_: fixed_: node1
		],,beg_search)
		
	searchElStr5([
		1_: fixed_: node1,
		2_: assign_: arc_: pos_: const_: arc1,
		3_: assign_: node_: const_: node2,
		4_: assign_: arc_: pos_: const_: arc2,
		5_: fixed_: 1_
		],,beg_search)
		
	searchSetStr3([
		1_: fixed_: node2,
		2_: assign_: arc_: pos_: const_: arc1,
		3_: assign_: node_: const_: node1,
		set3_: assign_: set2
		],,beg_search)
		
label(end_search)

printEl([1_: fixed_: set2])

label(beg_call)

	searchElStr3([
		1_: fixed_: set2,
		2_: assign_: arc_: pos_: const_: arc1,
		3_: assign_: node_: const_: node1
		],,end_call)
		
	eraseEl([1_: fixed_: arc1])
	genEl([1_: assign_: node_: const_: x1])
	genEl([1_: assign_: node_: const_: x2])
	callReturn([ 
		1_: fixed_: main_semantic,
		2_: fixed_: {[
			1_: target,
			2_: node1,
			3_: result_set,
			4_: x1,
			5_: x2
		]}
		], e)
	
	callReturn([ 
		1_: fixed_: ui_Output,
		2_: fixed_: {[
			1_: answer_reciever,
			2_: result_set
		]}
		])
		
	genEl([
		1_: assign_: node_: const_: result_set
		],beg_call)

label(end_call)

label(end_search_main_sem)

return()
end

procedure(binrel_by_target_rel,
[[
	rel = "/info/stype_bin_orient_norole_rel";
	struct = "/info/stype_struct";
	
	f_local_binrel_by_cheaf = "/operation/search_semantic/binrel_by_cheaf";
]],
[{
	target, relation, result_set,
	cheaf, node_n2,
	node1, node2, node3, node4,
	arc1, arc2, arc3, arc4,
	set1,
	e
}],
{[
	1_: in_: target,
	2_: in_: relation,
	3_: in_: out_: result_set,
	4_: out_: cheaf,
	5_: out_: node_n2
]}
)
genEl([1_: assign_: node_: const_: cheaf])
genEl([1_: assign_: node_: const_: node_n2])

genElStr3([ 1_: fixed_: result_set, 2_: assign_: arc_: pos_: const_: arc3, 3_: fixed_: target])

searchSetStr5([
	1_: assign_: node_: node1,
	2_: assign_: arc_: pos_: arc1,
	3_: fixed_: target,
	4_: assign_: pos_: arc_: arc2,
	5_: fixed_: 2_,
	set1_: assign_: set1
	],,brbtr_error,brbtr_error)
	
label(beg_brbtr_2)

	searchElStr3([
		1_: fixed_: set1,
		2_: assign_: arc_: pos_: arc1,
		3_: assign_: node_: node1
		],,end_brbtr_2,end_brbtr_2)
		
	eraseEl([ 1_: fixed_: arc1])
	
	searchElStr3([
		1_: fixed_: relation,
		2_: assign_: arc_: pos_: arc1,
		3_: fixed_: node1
		],,beg_brbtr_2,beg_brbtr_2)
		
	genElStr3([ 1_: fixed_: cheaf, 2_: assign_: arc_: pos_: const_: arc3, 3_: fixed_: node1])
	genElStr3([ 1_: fixed_: result_set, 2_: assign_: arc_: pos_: const_: arc3, 3_: fixed_: relation])
	genElStr3([ 1_: fixed_: result_set, 2_: assign_: arc_: pos_: const_: arc3, 3_: fixed_: arc1])
	
	callReturn([
	1_: fixed_: f_local_binrel_by_cheaf,
	2_: fixed_: {[
		1_: node1,
		2_: result_set,
		3_: node2,
		4_: node3,
		5_: node4
		]}
	], e)
	
	genElStr3([ 1_: fixed_: node_n2, 2_: assign_: arc_: pos_: const_: arc3, 3_: fixed_: node3]
		,beg_brbtr_2,beg_brbtr_2)

label(end_brbtr_2)

label(brbtr_error)

return()
end

procedure(binrel_by_cheaf,
[[
	rel = "/info/stype_bin_orient_norole_rel";
	struct = "/info/stype_struct";
	
	f_local_some_element = "/operation/search_semantic/local_some_element";
]],
[{
	cheaf, result_set,
	node_rel, node_n1, node_n2,
	node1, node2, 
	arc1, arc2, arc3, arc4,
	set1,
	e
}],
{[
	1_: in_: cheaf,
	2_: in_: out_: result_set,
	3_: out_: node_rel,
	4_: out_: node_n1,
	5_: out_: node_n2
]}
)
	
genElStr3([ 1_: fixed_: result_set, 2_: assign_: arc_: pos_: const_: arc3, 3_: fixed_: cheaf])

searchSetStr3([
	1_: assign_: node_: const_: node1,
	2_: assign_: arc_: pos_: arc1,
	3_: fixed_: cheaf,
	set1_: assign_: set1
	],,end_rbc_rel,rbc_error)
	
label(beg_rbc_rel)

	searchElStr3([
		1_: fixed_: set1,
		2_: assign_: arc_: pos_: const_: arc1,
		3_: assign_: node_: const_: node_rel
		],,end_rbc_rel,rbc_error)
		
	eraseEl([1_: fixed_: arc1])
	
	searchElStr3([
		1_: fixed_: rel,
		2_: assign_: arc_: pos_: const_: arc1,
		3_: fixed_: node_rel
		],,beg_rbc_rel,rbc_error)
		
	genElStr3([ 1_: fixed_: result_set, 2_: assign_: arc_: pos_: const_: arc3, 3_: fixed_: node_rel])
	
	searchElStr3([
		1_: fixed_: node_rel,
		2_: assign_: arc_: pos_: arc1,
		3_: fixed_: cheaf
		])
	
	genElStr3([ 1_: fixed_: result_set, 2_: assign_: arc_: pos_: const_: arc3, 3_: fixed_: arc1]
	,end_rbc_rel)

label(end_rbc_rel)

searchElStr5([
	1_: fixed_: cheaf,
	2_: assign_: arc_: pos_: arc1,
	3_: assign_: node_n1,
	4_: assign_: arc_: pos_: arc2,
	5_: fixed_: 1_
	],,rbc_no_1,rbc_error)
	
genElStr3([ 1_: fixed_: result_set, 2_: assign_: arc_: pos_: const_: arc3, 3_: fixed_: arc1])
genElStr3([ 1_: fixed_: result_set, 2_: assign_: arc_: pos_: const_: arc3, 3_: fixed_: arc2])
genElStr3([ 1_: fixed_: result_set, 2_: assign_: arc_: pos_: const_: arc3, 3_: fixed_: 1_])
	
callReturn([
	1_: fixed_: f_local_some_element,
	2_: fixed_: {[
		1_: fixed_: node_n1,
		2_: fixed_: result_set
		]}
	], e)

label(rbc_no_1)

searchElStr5([
	1_: fixed_: cheaf,
	2_: assign_: arc_: pos_: arc1,
	3_: assign_: node_n2,
	4_: assign_: arc_: pos_: arc2,
	5_: fixed_: 2_
	],,rbc_no_2,rbc_error)
	
genElStr3([ 1_: fixed_: result_set, 2_: assign_: arc_: pos_: const_: arc3, 3_: fixed_: arc1])
genElStr3([ 1_: fixed_: result_set, 2_: assign_: arc_: pos_: const_: arc3, 3_: fixed_: arc2])
genElStr3([ 1_: fixed_: result_set, 2_: assign_: arc_: pos_: const_: arc3, 3_: fixed_: 2_])
	
callReturn([
	1_: fixed_: f_local_some_element,
	2_: fixed_: {[
		1_: fixed_: node_n2,
		2_: fixed_: result_set
		]}
	], e)

label(rbc_no_2)

label(rbc_error)

return()
end

procedure(local_some_element,
[[
	f_local_some_element_r = "/operation/search_semantic/local_some_element";
	f_local_up = "/operation/search_semantic/local_up_elements";
	sheaf = "/info/stype_sheaf";
	attr = "/info/stype_bin_orient_role_rel";
]],
[{
	target, result_set,
	node1, node2, 
	arc1, arc2, arc3,
	e,
	set1, set2
}],
{[
	1_: in_: target,
	2_: in_: out_: result_set
]}
)

genElStr3([1_: fixed_: result_set, 2_: assign_: arc_: pos_: const_: arc1, 3_: fixed_: target ]
	,,lse_error,lse_error)

ifType([
	1_: fixed_: arc_: target
	],,lse_error,lse_error)
	
searchElStr3([
	1_: assign_: node1,
	2_: fixed_: target,
	3_: assign_: node2
	],,lse_error,lse_error)
	
callReturn([
	1_: fixed_: f_local_some_element_r,
	2_: fixed_: {[
		1_: fixed_: node1,
		2_: fixed_: result_set
		]}
	], e)

callReturn([
	1_: fixed_: f_local_some_element_r,
	2_: fixed_: {[
		1_: fixed_: node2,
		2_: fixed_: result_set
		]}
	], e, end_out)
	
label(lse_error)

callReturn([
	1_: fixed_: f_local_up,
	2_: fixed_: {[
		1_: fixed_: target,
		2_: fixed_: result_set
		]}
	], e)
	
searchElStr3([
	1_: fixed_: sheaf,
	2_: assign_: arc_: pos_: const_: arc1,
	3_: fixed_: target
	],,end_out)
	
searchSetStr3([
	1_: fixed_: target,
	2_: assign_: arc_: pos_: const_: arc1,
	3_: assign_: node_: const_: node1,
	set3_: fixed_: result_set
	])
	
	searchSetStr3([
		1_: fixed_: target,
		2_: assign_: arc_: pos_: const_: arc1,
		3_: assign_: node_: const_: node1,
		set3_: assign_: set1
		])
		
	label(beg_call_ups)
	
		searchElStr3([
			1_: fixed_: set1,
			2_: assign_: arc_: pos_: const_: arc1,
			3_: assign_: node_: const_: node1
			],,end_call_ups)
			
		eraseEl([1_: fixed_: arc1])
		
		callReturn([
			1_: fixed_: f_local_up,
			2_: fixed_: {[
				1_: fixed_: node1,
				2_: fixed_: result_set
				]}
			], e,beg_call_ups)
	
	label(end_call_ups)
	
searchSetStr3([
	1_: fixed_: target,
	2_: assign_: arc_: pos_: const_: arc1,
	3_: assign_: node_: const_: node1,
	set2_: fixed_: result_set
	])
	
	searchSetStr3([
		1_: fixed_: target,
		2_: assign_: arc_: pos_: const_: arc1,
		3_: assign_: node_: const_: node1,
		set2_: assign_: set1
		])
		
	label(begSearchAtr)
	
	searchElStr3([
		1_: fixed_: set1,
		2_: assign_: pos_: const_: arc_: arc1,
		3_: assign_: pos_: const_: arc_: arc2
		],,end_out)

	eraseEl([1_: fixed_: arc1])
	
	searchSetStr3([
		1_: assign_: node_: const_: node2,
		2_: assign_: arc_: const_: pos_: arc1,
		3_: fixed_: arc2,
		set1_: assign_: set2
		],,begSearchAtr)
		
		label(beg_atr_clr)
		
		searchElStr3([
			1_: fixed_: set2,
			2_: assign_: arc_: pos_: arc1,
			3_: assign_: node_: const_: node2
			],,begSearchAtr)
			
		eraseEl([1_: fixed_: arc1])
		
		searchElStr3([
			1_: fixed_: attr,
			2_: assign_: arc_: pos_: const_: arc1,
			3_: fixed_: node2
			],,beg_atr_clr)
			
		searchElStr3([
			1_: fixed_: node2,
			2_: assign_: arc_: pos_: const_: arc1,
			3_: fixed_: arc2
			])
			
		genElStr3([1_: fixed_: result_set, 2_: assign_: arc_: pos_: const_: arc3, 3_: fixed_: node2 ])
		genElStr3([1_: fixed_: result_set, 2_: assign_: arc_: pos_: const_: arc3, 3_: fixed_: arc1 ]
		,beg_atr_clr)

label(end_out)

return()
end

procedure(local_up_elements,
[[
	rel = "/info/stype_bin_orient_norole_rel";	
	family = "/info/stype_concept_norel";
	struct = "/info/stype_struct";
	subj = "/info/stype_ext_obj_abstract";
]],
[{
	target, result_set,
	node1, node2, 
	arc1, arc2, arc3,
	e,
	set1
}],
{[
	1_: in_: target,
	2_: in_: out_: result_set
]}
)

searchSetStr3([
	1_: assign_: node_: const_: node1,
	2_: assign_: arc_: pos_: const_: arc1,
	3_: fixed_: target,
	set1_: assign_: set1
	],,no_ups_elem)
	
label(beg_sort_up_elem)

	searchElStr3([
		1_: fixed_: set1,
		2_: assign_: arc_: pos_: const_: arc1,
		3_: assign_: node_: const_: node1
		],,no_ups_elem)
		
	eraseEl([1_: fixed_: arc1])
	
	searchElStr3([
		1_: fixed_: family,
		2_: assign_: arc_: pos_: const_: arc1,
		3_: fixed_: node1
		],add_up)
	searchElStr3([
		1_: fixed_: struct,
		2_: assign_: arc_: pos_: const_: arc1,
		3_: fixed_: node1
		],add_up)
	searchElStr3([
		1_: fixed_: subj,
		2_: assign_: arc_: pos_: const_: arc1,
		3_: fixed_: node1
		],add_up,beg_sort_up_elem)
		
	label(add_up)
		
	searchElStr3([
		1_: fixed_: node1,
		2_: assign_: arc_: pos_: const_: arc1,
		3_: fixed_: target
		])
		
	genElStr3([1_: fixed_: result_set, 2_: assign_: arc_: pos_: const_: arc3, 3_: fixed_: node1 ])
	genElStr3([1_: fixed_: result_set, 2_: assign_: arc_: pos_: const_: arc3, 3_: fixed_: arc1 ]
		,beg_sort_up_elem)
	
label(no_ups_elem)

return()
end